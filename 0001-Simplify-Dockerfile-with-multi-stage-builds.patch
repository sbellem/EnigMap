From 249364a3a46e7bdb90646d72126269305e2793b5 Mon Sep 17 00:00:00 2001
From: Sylvain Bellemare <sbellem@gmail.com>
Date: Thu, 16 Jun 2022 15:51:21 -0500
Subject: [PATCH] Simplify Dockerfile with multi-stage builds

---
 tools/docker/cppbuilder/Dockerfile | 60 ++++++++++++++++++------------
 1 file changed, 37 insertions(+), 23 deletions(-)

diff --git a/tools/docker/cppbuilder/Dockerfile b/tools/docker/cppbuilder/Dockerfile
index 3bbce32..66e9e36 100644
--- a/tools/docker/cppbuilder/Dockerfile
+++ b/tools/docker/cppbuilder/Dockerfile
@@ -1,36 +1,50 @@
 FROM debian:bookworm
+
+ARG DEBIAN_FRONTEND=noninteractive
+
 ENV TZ=Europe/Lisbon
 RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 
-RUN apt update -y && apt upgrade -y
-RUN apt install -y build-essential lld make git wget unzip cmake ninja-build
-RUN apt install -y clang clang-13 libc++-13-dev libc++abi-13-dev 
-RUN apt install -y libgtest-dev libboost-dev libssl-dev
-RUN apt install -y lcov gcovr cppcheck
-RUN apt install -y python3 python3-pip
-RUN apt install -y doxygen
+RUN apt-get update && apt-get install -y --no-install-recommends \
+                build-essential \
+                clang \
+                clang-13 \
+                clang-format \
+                clang-format-13 \
+                cmake \
+                cppcheck \
+                doxygen \
+                lld \
+                gcovr \
+                gdb \
+                git \
+                libc++-13-dev \
+                libc++abi-13-dev \
+                libgtest-dev \
+                libboost-dev \
+                libssl-dev \
+                libssl1.1 \
+                lcov \
+                ninja-build \
+                python3 \
+                python3-pip \
+                python-is-python3 \
+                wget \
+                unzip \
+        && rm -rf /var/lib/apt/lists/*
 
 RUN wget 'https://github.com/boyter/scc/releases/download/v3.0.0/scc-3.0.0-x86_64-unknown-linux.zip'
 RUN unzip 'scc-3.0.0-x86_64-unknown-linux.zip' -d /
 RUN chmod +x /scc
 
-RUN pip install cppcheck-codequality
-RUN pip install matplotlib numpy
-
-
-RUN apt install -y ocaml ocamlbuild automake autoconf libtool wget python-is-python3 libssl-dev git cmake perl
-RUN mkdir /dockerfiles
-RUN cd /dockerfiles
-RUN git clone 'https://github.com/intel/linux-sgx' /dockerfiles/linux-sgx
-RUN cd /dockerfiles/linux-sgx && make preparation
-RUN cd /dockerfiles/linux-sgx/external/toolset/ubuntu20.04; cp ./* /usr/local/bin
-RUN cd /dockerfiles/linux-sgx && make -j sdk && make -j sdk_install_pkg
-RUN cd /dockerfiles/linux-sgx/linux/installer/bin/ && echo yes | ./sgx_linux_x64_sdk_2.17.*.bin
-RUN echo "source /dockerfiles/linux-sgx/linux/installer/bin/sgxsdk/environment" > /startsgxenv.sh
-RUN chmod +x /startsgxenv.sh
+RUN pip install cppcheck-codequality matplotlib numpy
 
-RUN apt install -y gdb
-RUN apt install -y clang-format clang-format-13
+# sgx sdk
+COPY --from=initc3/linux-sgx:2.17 /opt/sgxsdk /opt/sgxsdk
+COPY --from=initc3/linux-sgx:2.17 /opt/sgxsdk /opt/sgxsdk
+RUN echo "source /opt/sgxsdk/environment" > /startsgxenv.sh \
+        && chmod +x /startsgxenv.sh \
+        && echo "source /opt/sgxsdk/environment" >> /root/.bashrc
 
 WORKDIR /builder/
 CMD ["bash"]
-- 
2.25.1

